// <auto-generated />
using System;
using Carteiras_Digitais.Infrasctruture.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Carteiras_Digitais.Infrasctruture.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Carteiras_Digitais.Core.Domain.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("ReceiverWalletId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderWalletId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SenderWalletId");

                    b.ToTable("transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e2c20c25-36f6-4c64-ac7b-34e016fa2bd0"),
                            Amount = 100m,
                            CreatedAt = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "testSender quantity 100$ to userTest",
                            ReceiverWalletId = new Guid("7f9efaa3-f0a3-4364-aa8a-816ab961f462"),
                            SenderWalletId = new Guid("bbfe0b99-4d14-4b69-a533-25be66975947")
                        },
                        new
                        {
                            Id = new Guid("2c8822d8-425e-44f2-85f9-8ad17566848a"),
                            Amount = 100m,
                            CreatedAt = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "userSender quantity 100$ to userTest",
                            ReceiverWalletId = new Guid("bbfe0b99-4d14-4b69-a533-25be66975947"),
                            SenderWalletId = new Guid("7f9efaa3-f0a3-4364-aa8a-816ab961f462")
                        });
                });

            modelBuilder.Entity("Carteiras_Digitais.Core.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60935b2a-f96e-412e-bdab-025a97dfe67f"),
                            Email = "test@mail.com",
                            Name = "testName",
                            Password = "$2b$10$MEZct3NsWZdlHHwyBHrzUOYNs6FCZA4X1.JoSO7EYYI3F4uOIow7W"
                        },
                        new
                        {
                            Id = new Guid("8f653fb3-f868-4fe3-b22e-8d68c659d2d8"),
                            Email = "user@mail.com",
                            Name = "userName",
                            Password = "$2b$10$FbLO2voKSkzimBkf0z66oOBQ6jo99N/Y4b5RaDuOrIBAjNJr3OCxG"
                        });
                });

            modelBuilder.Entity("Carteiras_Digitais.Core.Domain.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("wallets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbfe0b99-4d14-4b69-a533-25be66975947"),
                            Balance = 100m,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("60935b2a-f96e-412e-bdab-025a97dfe67f")
                        },
                        new
                        {
                            Id = new Guid("7f9efaa3-f0a3-4364-aa8a-816ab961f462"),
                            Balance = 100m,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("8f653fb3-f868-4fe3-b22e-8d68c659d2d8")
                        });
                });

            modelBuilder.Entity("Carteiras_Digitais.Core.Domain.Models.Transaction", b =>
                {
                    b.HasOne("Carteiras_Digitais.Core.Domain.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("SenderWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Carteiras_Digitais.Core.Domain.Models.Wallet", b =>
                {
                    b.HasOne("Carteiras_Digitais.Core.Domain.Models.User", "user")
                        .WithOne("wallet")
                        .HasForeignKey("Carteiras_Digitais.Core.Domain.Models.Wallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Carteiras_Digitais.Core.Domain.Models.User", b =>
                {
                    b.Navigation("wallet");
                });

            modelBuilder.Entity("Carteiras_Digitais.Core.Domain.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
